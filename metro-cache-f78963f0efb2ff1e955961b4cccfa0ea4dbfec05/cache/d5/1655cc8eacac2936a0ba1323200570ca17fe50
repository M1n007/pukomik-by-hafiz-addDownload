__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../../node_modules/react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/neo/NodeJS/Rn/pukomikcom/src/screens/ChapterList.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _reactNative = _require(_dependencyMap[2], "react-native");

    var _nativeBase = _require(_dependencyMap[3], "native-base");

    var _reactNativeModal = _require(_dependencyMap[4], "react-native-modal");

    var _reactNativeModal2 = _interopRequireDefault(_reactNativeModal);

    var _reactRedux = _require(_dependencyMap[5], "react-redux");

    var _chapterList = _require(_dependencyMap[6], "../actions/chapterList");

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        ChapterList: {
            displayName: "ChapterList"
        }
    };

    var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/neo/NodeJS/Rn/pukomikcom/src/screens/ChapterList.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var ChapterList = _wrapComponent("ChapterList")(function (_Component) {
        _inherits(ChapterList, _Component);

        function ChapterList() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, ChapterList);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ChapterList.__proto__ || Object.getPrototypeOf(ChapterList)).call.apply(_ref, [this].concat(args))), _this), _this.handleOnPull = function () {
                _this.props.dispatch((0, _chapterList.getChapterList)(_this.props.mangaDetailsReducer.manga.id));
            }, _this._keyExtractor = function (item, index) {
                return item.id;
            }, _this._onPressItem = function () {
                alert('list onpress');
            }, _this._renderItem = function (_ref2) {
                var item = _ref2.item;
                return _react3.default.createElement(
                    _nativeBase.ListItem,
                    {
                        onPress: function onPress() {
                            return _this.props.navigation.navigate('PagesLoader', {
                                id: item.id
                            });
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 31
                        }
                    },
                    _react3.default.createElement(
                        _nativeBase.Body,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 32
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.Text,
                            {
                                style: {
                                    color: '#121212'
                                },
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 33
                                }
                            },
                            "Chapter #",
                            item.chapter
                        ),
                        _react3.default.createElement(
                            _reactNative.Text,
                            {
                                style: styles.chapterTitle,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 34
                                }
                            },
                            item.title
                        )
                    )
                );
            }, _this.handleModal = function () {
                _this.props.dispatch({
                    type: 'MODAL_ACTION'
                });
            }, _temp), _possibleConstructorReturn(_this, _ret);
        }

        _createClass(ChapterList, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                this.props.dispatch((0, _chapterList.getChapterList)(this.props.mangaDetailsReducer.manga.id));
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.props.dispatch({
                    type: 'RESET_CHAPTER_LIST'
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react3.default.createElement(
                    _nativeBase.Container,
                    {
                        style: {
                            backgroundColor: 'white'
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 50
                        }
                    },
                    _react3.default.createElement(
                        _reactNativeModal2.default,
                        {
                            isVisible: this.props.chapterListReducer.modal,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 51
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.View,
                            {
                                style: styles.modalWrapper,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 52
                                }
                            },
                            _react3.default.createElement(
                                _reactNative.View,
                                {
                                    style: styles.modalMain,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 53
                                    }
                                },
                                _react3.default.createElement(
                                    _reactNative.View,
                                    {
                                        style: {
                                            alignSelf: 'flex-end'
                                        },
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 54
                                        }
                                    },
                                    _react3.default.createElement(
                                        _reactNative.TouchableNativeFeedback,
                                        {
                                            onPress: function onPress() {
                                                return _this2.handleModal(false);
                                            },
                                            background: _reactNative.TouchableNativeFeedback.SelectableBackgroundBorderless(),
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 55
                                            }
                                        },
                                        _react3.default.createElement(_nativeBase.Icon, {
                                            style: styles.modalIcon,
                                            name: "close",
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 58
                                            }
                                        })
                                    )
                                ),
                                _react3.default.createElement(
                                    _reactNative.Text,
                                    {
                                        style: {
                                            color: '#121212'
                                        },
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 61
                                        }
                                    },
                                    "Coming soon bosqu"
                                ),
                                _react3.default.createElement(
                                    _reactNative.Text,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 62
                                        }
                                    },
                                    "Please Wait.."
                                ),
                                _react3.default.createElement(_nativeBase.Spinner, {
                                    color: "#568BF2",
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 63
                                    }
                                }),
                                _react3.default.createElement(
                                    _reactNative.Text,
                                    {
                                        style: {
                                            marginTop: 10
                                        },
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 64
                                        }
                                    },
                                    "Downloading 1/20.."
                                )
                            )
                        )
                    ),
                    _react3.default.createElement(
                        _reactNative.View,
                        {
                            style: styles.mangaTitle,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 72
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.Text,
                            {
                                style: styles.mangaTitleText,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 73
                                }
                            },
                            this.props.mangaDetailsReducer.manga.titleMal
                        )
                    ),
                    _react3.default.createElement(_reactNative.FlatList, {
                        refreshing: this.props.chapterListReducer.isLoading,
                        onRefresh: this.handleOnPull,
                        onEndReachedThreshold: 0.1,
                        data: this.props.chapterListReducer.data,
                        keyExtractor: this._keyExtractor,
                        renderItem: this._renderItem,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 76
                        }
                    })
                );
            }
        }]);

        return ChapterList;
    }(_react2.Component));

    mapStateToProps = function mapStateToProps(state) {
        return {
            chapterListReducer: state.chapterListReducer,
            mangaDetailsReducer: state.mangaDetailsReducer
        };
    };

    exports.default = (0, _reactRedux.connect)(mapStateToProps)(ChapterList);
    styles = _reactNative.StyleSheet.create({
        chapterTitle: {
            color: '#878787',
            fontSize: 12
        },
        modalWrapper: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center'
        },
        modalMain: {
            width: 250,
            backgroundColor: 'white',
            borderRadius: 10,
            padding: 10,
            alignItems: 'center'
        },
        modalIcon: {
            fontSize: 20,
            color: '#878787'
        },
        mangaTitle: {
            backgroundColor: '#FAFAFA',
            padding: 6
        },
        mangaTitleText: {
            fontSize: 12,
            textAlign: 'center'
        }
    });
});