__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../../node_modules/react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/neo/NodeJS/Rn/pukomikcom/src/screens/Search.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _reactNative = _require(_dependencyMap[2], "react-native");

    var _nativeBase = _require(_dependencyMap[3], "native-base");

    var _reactRedux = _require(_dependencyMap[4], "react-redux");

    var _moment = _require(_dependencyMap[5], "moment");

    var _moment2 = _interopRequireDefault(_moment);

    var _search = _require(_dependencyMap[6], "../actions/search");

    var searchAction = _interopRequireWildcard(_search);

    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        Search: {
            displayName: "Search"
        }
    };

    var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/neo/NodeJS/Rn/pukomikcom/src/screens/Search.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var Search = _wrapComponent("Search")(function (_Component) {
        _inherits(Search, _Component);

        function Search() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Search);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Search.__proto__ || Object.getPrototypeOf(Search)).call.apply(_ref, [this].concat(args))), _this), _this.handlePull = function () {
                _this.props.dispatch(searchAction.searchManga(_this.props.navigation.getParam('search')));
            }, _this._keyExtractor = function (item, index) {
                return item.id;
            }, _this._renderItem = function (_ref2) {
                var item = _ref2.item;
                return _react3.default.createElement(
                    _reactNative.TouchableNativeFeedback,
                    {
                        background: _reactNative.TouchableNativeFeedback.SelectableBackground(),
                        onPress: function onPress() {
                            return _this.props.navigation.navigate('MangaDetails', {
                                id: item.id
                            });
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 32
                        }
                    },
                    _react3.default.createElement(
                        _nativeBase.View,
                        {
                            style: styles.descriptionWrapper,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 36
                            }
                        },
                        _react3.default.createElement(
                            _nativeBase.View,
                            {
                                style: styles.imageWrapper,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 37
                                }
                            },
                            _react3.default.createElement(_reactNative.Image, {
                                style: {
                                    height: '100%',
                                    width: '100%'
                                },
                                source: {
                                    uri: item.img
                                },
                                resizeMode: "cover",
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 38
                                }
                            }),
                            _react3.default.createElement(
                                _nativeBase.View,
                                {
                                    style: styles.scoreWrapper,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 46
                                    }
                                },
                                _react3.default.createElement(
                                    _nativeBase.View,
                                    {
                                        style: styles.scoreValueWrapper,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 48
                                        }
                                    },
                                    _react3.default.createElement(
                                        _reactNative.Text,
                                        {
                                            style: styles.scoreValueText,
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 49
                                            }
                                        },
                                        item.score
                                    )
                                )
                            )
                        ),
                        _react3.default.createElement(
                            _nativeBase.View,
                            {
                                style: styles.description,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 53
                                }
                            },
                            _react3.default.createElement(
                                _reactNative.Text,
                                {
                                    style: styles.title,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 54
                                    }
                                },
                                item.title
                            ),
                            _react3.default.createElement(
                                _nativeBase.View,
                                {
                                    style: styles.subDescription,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 55
                                    }
                                },
                                _react3.default.createElement(
                                    _reactNative.Text,
                                    {
                                        style: styles.subDescriptionText,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 56
                                        }
                                    },
                                    (0, _moment2.default)(item.created).fromNow(),
                                    ","
                                ),
                                _react3.default.createElement(
                                    _reactNative.Text,
                                    {
                                        style: styles.subDescriptionText,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 57
                                        }
                                    },
                                    " last chapter ",
                                    item.chapter
                                )
                            ),
                            _react3.default.createElement(
                                _reactNative.Text,
                                {
                                    numberOfLines: 4,
                                    style: styles.synopsis,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 59
                                    }
                                },
                                item.synopsis
                            )
                        )
                    )
                );
            }, _temp), _possibleConstructorReturn(_this, _ret);
        }

        _createClass(Search, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                this.props.dispatch(searchAction.searchManga(this.props.navigation.getParam('search')));
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.props.dispatch({
                    type: 'RESET_SEARCH'
                });
            }
        }, {
            key: "render",
            value: function render() {
                return _react3.default.createElement(
                    _nativeBase.View,
                    {
                        style: styles.mainWrapper,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 67
                        }
                    },
                    this.props.searchReducer.isComplete == true && this.props.searchReducer.dataSearch.length == 0 ? _react3.default.createElement(
                        _reactNative.Text,
                        {
                            style: styles.noResults,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 69
                            }
                        },
                        "No results.."
                    ) : null,
                    _react3.default.createElement(_reactNative.FlatList, {
                        refreshing: this.props.searchReducer.isLoading,
                        onRefresh: this.handlePull,
                        data: this.props.searchReducer.dataSearch,
                        extraData: this.props.searchReducer.dataSearch,
                        keyExtractor: this._keyExtractor,
                        renderItem: this._renderItem,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 71
                        }
                    })
                );
            }
        }]);

        return Search;
    }(_react2.Component));

    var mapStateToProps = function mapStateToProps(state) {
        return {
            searchReducer: state.searchReducer
        };
    };

    exports.default = (0, _reactRedux.connect)(mapStateToProps)(Search);

    var styles = _reactNative.StyleSheet.create({
        noResults: {
            alignSelf: 'center',
            backgroundColor: '#F16334',
            color: 'white',
            padding: 5,
            paddingLeft: 10,
            paddingRight: 10,
            marginTop: 10,
            borderRadius: 50
        },
        descriptionWrapper: {
            flexDirection: 'row',
            height: 160,
            padding: 10
        },
        subDescription: {
            flexDirection: 'row'
        },
        subDescriptionText: {
            fontSize: 12,
            marginBottom: 5
        },
        title: {
            color: '#121212'
        },
        description: {
            flex: 1,
            paddingLeft: 10
        },
        synopsis: {
            color: '#545454',
            fontSize: 13
        },
        mainWrapper: {
            flex: 1,
            backgroundColor: 'white'
        },
        imageWrapper: {
            width: 110,
            height: 140,
            backgroundColor: '#f2f2f2',
            borderRadius: 5,
            overflow: 'hidden'
        },
        scoreWrapper: {
            flexDirection: 'row',
            position: 'absolute',
            top: 5,
            right: 5
        },
        scoreValueWrapper: {
            width: 35,
            backgroundColor: '#F16334',
            justifyContent: 'center',
            alignItems: 'center',
            borderRadius: 50,
            marginLeft: 10
        },
        scoreValueText: {
            color: 'white',
            fontSize: 12
        },
        scoreText: {
            fontSize: 12
        }
    });
});