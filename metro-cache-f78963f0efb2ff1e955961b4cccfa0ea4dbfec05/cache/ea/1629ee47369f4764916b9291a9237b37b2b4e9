__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../../../node_modules/react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/neo/NodeJS/Rn/pukomikcom/src/screens/main/Bookmarks.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _reactNative = _require(_dependencyMap[2], "react-native");

    var _nativeBase = _require(_dependencyMap[3], "native-base");

    var _reactRedux = _require(_dependencyMap[4], "react-redux");

    var _moment = _require(_dependencyMap[5], "moment");

    var _moment2 = _interopRequireDefault(_moment);

    var _bookmarks = _require(_dependencyMap[6], "../../actions/bookmarks");

    var bookmarkAction = _interopRequireWildcard(_bookmarks);

    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        Manga: {
            displayName: "Manga"
        },
        Bookmarks: {
            displayName: "Bookmarks"
        }
    };

    var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/neo/NodeJS/Rn/pukomikcom/src/screens/main/Bookmarks.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var Manga = _wrapComponent("Manga")(function (_PureComponent) {
        _inherits(Manga, _PureComponent);

        function Manga() {
            _classCallCheck(this, Manga);

            return _possibleConstructorReturn(this, (Manga.__proto__ || Object.getPrototypeOf(Manga)).apply(this, arguments));
        }

        _createClass(Manga, [{
            key: "render",
            value: function render() {
                return _react3.default.createElement(
                    _reactNative.TouchableNativeFeedback,
                    {
                        background: _reactNative.TouchableNativeFeedback.SelectableBackgroundBorderless(),
                        onPress: this.props.onPress,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 14
                        }
                    },
                    _react3.default.createElement(
                        _reactNative.View,
                        {
                            style: styles.listWrapper,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 18
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.View,
                            {
                                style: styles.imageWrapper,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 19
                                }
                            },
                            _react3.default.createElement(_reactNative.Image, {
                                style: {
                                    height: '100%',
                                    width: '100%'
                                },
                                source: {
                                    uri: this.props.img
                                },
                                resizeMode: "cover",
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 20
                                }
                            }),
                            _react3.default.createElement(
                                _reactNative.View,
                                {
                                    style: styles.scoreWrapper,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 28
                                    }
                                },
                                _react3.default.createElement(
                                    _reactNative.View,
                                    {
                                        style: styles.scoreValueWrapper,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 30
                                        }
                                    },
                                    _react3.default.createElement(
                                        _reactNative.Text,
                                        {
                                            style: styles.scoreValueText,
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 31
                                            }
                                        },
                                        this.props.score
                                    )
                                )
                            )
                        ),
                        _react3.default.createElement(
                            _reactNative.Text,
                            {
                                numberOfLines: 1,
                                style: styles.mangaTitle,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 35
                                }
                            },
                            this.props.title
                        ),
                        _react3.default.createElement(
                            _reactNative.Text,
                            {
                                style: styles.lChapterText,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 37
                                }
                            },
                            "Last Chapter ",
                            this.props.lastChapter
                        ),
                        _react3.default.createElement(
                            _reactNative.Text,
                            {
                                style: styles.lChapterText,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 38
                                }
                            },
                            (0, _moment2.default)(this.props.created).fromNow()
                        )
                    )
                );
            }
        }]);

        return Manga;
    }(_react2.PureComponent));

    var Bookmarks = _wrapComponent("Bookmarks")(function (_Component) {
        _inherits(Bookmarks, _Component);

        function Bookmarks() {
            var _ref;

            var _temp, _this2, _ret;

            _classCallCheck(this, Bookmarks);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = Bookmarks.__proto__ || Object.getPrototypeOf(Bookmarks)).call.apply(_ref, [this].concat(args))), _this2), _this2.componentDidMount = function () {
                _this2.props.dispatch(bookmarkAction.getMangaIn(_this2.props.bookmarksReducer.bookmarks));
            }, _this2._keyExtractor = function (item, index) {
                return item.id;
            }, _this2._renderItem = function (_ref2) {
                var item = _ref2.item;
                return _react3.default.createElement(Manga, {
                    img: item.img,
                    title: item.title,
                    score: item.score,
                    popularity: item.popularity,
                    onPress: function onPress() {
                        return _this2.props.navigation.navigate('MangaDetails', {
                            id: item.id
                        });
                    },
                    lastChapter: item.chapter,
                    created: item.created,
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 55
                    }
                });
            }, _this2.handleOnPull = function () {
                _this2.props.dispatch(bookmarkAction.getMangaIn(_this2.props.bookmarksReducer.bookmarks));
            }, _temp), _possibleConstructorReturn(_this2, _ret);
        }

        _createClass(Bookmarks, [{
            key: "render",
            value: function render() {
                return _react3.default.createElement(
                    _nativeBase.Container,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 73
                        }
                    },
                    this.props.bookmarksReducer.isComplete == true && this.props.bookmarksReducer.bookmarks.length == 0 ? _react3.default.createElement(
                        _reactNative.Text,
                        {
                            style: styles.noResults,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 75
                            }
                        },
                        "No data.."
                    ) : null,
                    _react3.default.createElement(_reactNative.FlatList, {
                        style: {
                            backgroundColor: 'white'
                        },
                        contentContainerStyle: styles.bodyWrapper,
                        refreshing: this.props.bookmarksReducer.isLoading,
                        onRefresh: this.handleOnPull,
                        data: this.props.bookmarksReducer.data,
                        extraData: this.props.bookmarksReducer.data,
                        keyExtractor: this._keyExtractor,
                        renderItem: this._renderItem,
                        numColumns: 3,
                        columnWrapperStyle: {
                            justifyContent: 'space-around'
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 77
                        }
                    })
                );
            }
        }]);

        return Bookmarks;
    }(_react2.Component));

    var mapStateToProps = function mapStateToProps(state) {
        return {
            bookmarksReducer: state.bookmarksReducer
        };
    };

    exports.default = (0, _reactRedux.connect)(mapStateToProps)(Bookmarks);

    var styles = _reactNative.StyleSheet.create({
        noResults: {
            alignSelf: 'center',
            backgroundColor: '#F16334',
            color: 'white',
            padding: 5,
            paddingLeft: 10,
            paddingRight: 10,
            marginTop: 10,
            borderRadius: 50
        },
        bodyWrapper: {
            backgroundColor: 'white',
            flexDirection: 'column',
            paddingTop: 10
        },
        listWrapper: {
            height: 200,
            width: 110,
            borderRadius: 5,
            overflow: 'hidden',
            backgroundColor: 'white',
            padding: 5,
            margin: 5
        },
        imageWrapper: {
            width: '100%',
            height: 140,
            backgroundColor: '#f2f2f2',
            borderRadius: 5,
            overflow: 'hidden'
        },
        mangaTitle: {
            color: '#121212'
        },
        scoreWrapper: {
            flexDirection: 'row',
            position: 'absolute',
            top: 5,
            right: 5
        },
        scoreValueWrapper: {
            width: 35,
            backgroundColor: '#F16334',
            justifyContent: 'center',
            alignItems: 'center',
            borderRadius: 50,
            marginLeft: 10
        },
        scoreValueText: {
            color: 'white',
            fontSize: 12
        },
        scoreText: {
            fontSize: 12
        },
        lChapterText: {
            fontSize: 12
        }
    });
});